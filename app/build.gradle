apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

def getManifestPlaceholders(channelName, flavors) {
    def packageName = rootProject.ext.android.applicationId
    def qqAppId = rootProject.ext.config.QQ_APP_ID

    println " qqAppId is " + qqAppId
    println " channelName is " + channelName
    println " flavors is " + flavors

    def tHolders = [
            PACKAGE_NAME           : packageName,
            qqappid                : qqAppId,
            UMENG_CHANNEL_VALUE    : channelName
    ]
    return tHolders
}

def getManifestPlaceholdersForBuildType(BuildType) {
    def enableLargeHeap = 'false'
    if ('release' == BuildType) {
        enableLargeHeap = 'true'
    }
    println "buildType=" + BuildType + ", enableLargeHeap=" + enableLargeHeap
    def tHolders = [
            ENABLE_LARGE_HEAP: enableLargeHeap,
    ]
    return tHolders
}

def releaseTime() {
    return new Date().format("yyyyMMdd_HHmm")
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            try {
                File signFile = rootProject.file('sign.properties')
                Properties p = new Properties()
                p.load(new FileInputStream(signFile))

                storeFile file("${project.rootDir}/distancedays.jks")
                storePassword p.storePassword
                keyAlias p.keyAlias
                keyPassword p.keyPassword
            } catch (ex) {
                throw new Exception("You should define KEYSTORE_PASSWORD and " +
                        "KEY_PASSWORD in sign.properties.")
            }
        }
    }

    buildTypes {
        release {
            buildConfigField("String", "releaseTime", "\"" + releaseTime() + "\"")
            buildConfigField("String", "UMENG_CHANNEL", "\"" + CHANNEL + "\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled MINIFY_ENABLED.toBoolean()
            shrinkResources true
            zipAlignEnabled true
            addManifestPlaceholders(getManifestPlaceholdersForBuildType('release'))
        }
        debug {
            buildConfigField("String", "releaseTime", "\"" + releaseTime() + "\"")
            buildConfigField("String", "UMENG_CHANNEL", "\"" + CHANNEL + "\"")
            minifyEnabled false
            debuggable true
            versionNameSuffix 'dev'
            // 多渠道打包必须要写这句话，否则多渠道打debug包时，签名不生效
            signingConfig null
            addManifestPlaceholders(getManifestPlaceholdersForBuildType('debug'))
        }

        forTest.initWith(release)
        forTest {
            versionNameSuffix 'test'
            matchingFallbacks = ['release']
            debuggable true
            addManifestPlaceholders(getManifestPlaceholdersForBuildType('forTest'))
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def showVersionName = variant.productFlavors[0].versionName
            if (showVersionName == null) {
                showVersionName = defaultConfig.versionName
            }
            def showVersionCode = variant.productFlavors[0].versionCode
            if (showVersionCode == null) {
                showVersionCode = defaultConfig.versionCode
            }
            def productFlavor = variant.productFlavors[0].name
            if (productFlavor == null) {
                productFlavor = "distancedays"
            }
            /**
             * 安卓apk包命名规则
             apk安装包中必须包含以下信息，以下划线连接
             1.产品名称，必须是英文字母，不能出现中文。
             2.productFlavors号：distancedays表示倒数日（渠道号）
             3.外部版本号
             4.内部版本号
             5.打包日期

             官方包示例：
             DistanceDays_distancedays_4.1.3_40103_20190314_1011.apk
             */

            def suffix = ".apk"

            outputFileName = "DistanceDays_" +
                    "${productFlavor}_" +
                    "${showVersionName}_" +
                    "${showVersionCode}_" +
                    "${releaseTime()}" +
                    suffix
        }
    }
    flavorDimensions "versionCode"
    productFlavors {
        // 多渠道配置
        distancedays {
            addManifestPlaceholders(getManifestPlaceholders(CHANNEL, "distancedays"))
            applicationId rootProject.ext.android.applicationId
            versionName rootProject.ext.android.versionName
            versionCode rootProject.ext.android.versionCode
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    aaptOptions {
        cruncherEnabled = false
        cruncherProcesses 1
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def dependencies = rootProject.ext.dependencies
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.google.android.material:material:1.0.0'

    // EventBus 事件总线
    implementation 'org.greenrobot:eventbus:3.1.1'

    // butterknife
    implementation "com.jakewharton:butterknife:10.0.0"
    annotationProcessor "com.jakewharton:butterknife-compiler:10.0.0"

    // okhttp
    implementation("com.squareup.okhttp3:okhttp:4.2.0")

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.0.1'

    // JSON库
    api 'com.alibaba:fastjson:1.1.46.sec01'
    // gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // rxjava
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'

    // 日志
    implementation 'com.orhanobut:logger:1.15'

    // 数据库
    implementation 'org.greenrobot:greendao:3.2.2'

    // 分享
    implementation project(":sharelib")

    implementation project(":statusbarlibrary")

    implementation  'com.umeng.umsdk:analytics:8.0.0'

    // ad
    implementation 'com.litre.component:litres-ad:1.1.5.5'

    // parse
    implementation dependencies.parse

    //内存分析以及性能分析
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    forTestImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'
    forTestImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'
}
